on:
  push:
    branches:
      - main
jobs:
  flutter:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get latest Flutter tag
        id: query
        uses: actions/github-script@v6
        with:
          script: |
            const query = `query GetLatestTags {
              repository(owner: "flutter", name: "flutter") {
                tags: refs(
                  refPrefix: "refs/tags/"
                  first: 10
                  orderBy: { field: TAG_COMMIT_DATE, direction: DESC }
                ) {
                  edges {
                    node {
                      version: name
                      target {
                        oid
                      }
                    }
                  }
                }
              }
            }`;

            const rawResult = await github.graphql(query)
            const regex = /^(\d+\.)+\d+(?!-)$/g
            const tags = rawResult.repository.tags.edges
            const latestTag = tags.find((tag) => tag.node.version.match(regex))

            const fs = require('fs');
            const resultPath = 'version.json';
            const data = fs.readFileSync(resultPath, 'utf8');
            const json = JSON.parse(data);

            const result = {
              ...json,
              flutter: {
                version: latestTag.node.version,
                commit: latestTag.node.target.oid
              }
            }

            fs.writeFileSync(resultPath, JSON.stringify(result, null, 2));

            return result
      
      - name: Set environment variable for Flutter version
        run: |
          echo "FLUTTER_VERSION=${{ fromJson(steps.query.outputs.result).flutter.version }}" >> $GITHUB_ENV

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          cache: true
          channel: stable
          version: ${{ env.FLUTTER_VERSION }}
       
      - name: Create test application
        run: |
          flutter create test_app
          
      - name: Get Android platform versions
        run: |
          cat script\updateAndroidPlatform.gradle >> test_app/android/app/build.gradle
          cd test_app/android
          ./gradlew --warning-mode all updateAndroidPlatform
      
      - name: Show version.json
        run: |
          cat version.json
          
          

      # - name: Create pull request if there are changes
      #   uses: peter-evans/create-pull-request@v4

# TODO: https://github.com/flutter-actions/setup-flutter

